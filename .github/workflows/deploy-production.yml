name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies (client)
        run: |
          cd client
          pnpm install --no-frozen-lockfile

      - name: Install dependencies (server)
        run: |
          cd server
          pnpm install --no-frozen-lockfile

      - name: Build client
        run: |
          cd client
          pnpm build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL_PROD }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./
        env:
          # Backend Environment Variables
          MONGODB_URI: ${{ secrets.MONGODB_URI_PROD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET_PROD }}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN_PROD }}
          JWT_REFRESH_EXPIRES_IN: ${{ secrets.JWT_REFRESH_EXPIRES_IN_PROD }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID_PROD }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET_PROD }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL_PROD }}
          CLIENT_URL: ${{ secrets.CLIENT_URL_PROD }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY_PROD }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY_PROD }}
          NODE_ENV: production

      - name: Post-deployment health check
        run: |
          sleep 30
          curl -f https://course-craft-amber.vercel.app/api/health || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Production deployment successful!"
          echo "üåê Frontend: ${{ secrets.FRONTEND_URL_PROD }}"
          echo "üîó API: ${{ secrets.API_URL_PROD }}"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Production deployment failed!"
          exit 1